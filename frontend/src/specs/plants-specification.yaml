openapi: 3.0.3
info:
  title: Plant specification
  description: Plant specification
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /plants/add-plant:
    description: |
      Endpoint for adding new plant
    post:
      tags:
        - "Plants"
      operationId: addPlant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Plant"
      responses:
        "200":
          description: Ok. Successful response will return OK status and code 200.
  /plants/edit-plant:
    description: |
      Endpoint for editing existing plant
    post:
      tags:
        - "Plants"
      operationId: editPlant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Plant"
      responses:
        "200":
          description: Ok. Successful response will return OK status and code 200.
  /plants/delete-plant:
    description: |
      Endpoint for deleting plants
    post:
      tags:
        - "Plants"
      operationId: deletePlant
      parameters:
        - name: plantId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return OK status and code 200.
  /plants/add-varitiey:
    description: |
      Endpoint for adding variety to existing plant
    post:
      tags:
        - "Plants"
      operationId: addVariety
      parameters:
        - name: plantId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlantVariety"
      responses:
        "200":
          description: Ok. Successful response will return OK status and code 200.
  /plants/edit-varitey:
    description: |
      Endpoint for editing existing variety
    post:
      tags:
        - "Plants"
      operationId: editVariety
      parameters:
        - name: plantId
          in: query
          required: false
          allowEmptyValue: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlantVariety"
      responses:
        "200":
          description: Ok. Successful response will return OK status and code 200.
  /plants/delete-varitey:
    description: |
      Endpoint for deleting variety
    post:
      tags:
        - "Plants"
      operationId: deleteVariety
      parameters:
        - name: varietyId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return OK status and code 200.
  /plants/get-plants:
    description: |
      Endpoint for getting list of plants
    post:
      tags:
        - "Plants"
      operationId: getPlants
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageRequest"
      responses:
        "200":
          description: Ok. Successful response will return OK status and code 200 and paged list of plants.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedPlants"
  /plants/get-plants-by-type:
    description: |
      Endpoint for getting list of plants by type
    post:
      tags:
        - "Plants"
      operationId: getPlantsByType
      parameters:
        - name: plantType
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageRequest"
      responses:
        "200":
          description: Ok. Successful response will return OK status with code 200 and paged list of plants.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedPlants"
  /plants/find-plants:
    description: |
      Endpoint for searching plants by name
    post:
      tags:
        - "Plants"
      operationId: findPlants
      parameters:
        - name: searchPhrase
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageRequest"
      responses:
        "200":
          description: OK. Successful response will return OK status with code 200 an paged list od plants.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedPlants"
  /plants/get-varieties-by-plant:
    description: |
      Endpoint for getting varieties by plants
    post:
      tags:
        - "Plants"
      operationId: getVarietiesByPlant
      parameters:
        - name: plantId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageRequest"
      responses:
        "200":
          description: Ok. Successful response will return OK status with code 200 and paged list of varieties.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedPlantVarieties"
  /plants/get-plant-by-id:
    description: |
      Endpoint for getting plant by id
    post:
      tags:
        - "Plants"
      operationId: getPlantById
      parameters:
        - name: plantId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return OK status with code 200 and PlantDto object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Plant"
  /plants/get-variety-by-id:
    description: |
      Endpoint for getting variety by id
    post:
      tags:
        - "Plants"
      operationId: getVarietyById
      parameters:
        - name: varietyId
          in: query
          required: true
          allowEmptyValue: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ok. Successful response will return OK status with code 200 and PlantVarietyDto object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlantVariety"
components:
  schemas:
    PageRequest:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        sortDirection:
          type: string
        sortColumn:
          type: string
    Page:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer
    PagedPlants:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Plant"
        page:
          $ref: "#/components/schemas/Page"
    PagedPlantVarieties:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PlantVariety"
        page:
          $ref: "#/components/schemas/Page"
    Plant:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        plantType:
          type: integer
        plantVarieties:
          type: array
          items:
            $ref: "#/components/schemas/PlantVariety"
    PlantVariety:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        priceForUnit:
          type: number
          format: double

